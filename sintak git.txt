Istilah-istilah
-> branch = digunakan untuk membuat cabang-cabang pada commit fungsinya digunakan untuk menambahkan fitur baru, tapi belum yakin implementasinya, atau mengerjakan repo secara team
-> merge = menggabungkan merge
-> ada dua istillah di dalam merge yaitu 
- Fast Forward = digunakan untuk merge secara langsung
- Three-way Merge / Merge Commit = digunakan untuk merge ketika tidak ada direct path jadi harus pake metode ini
-> kalau mau merge, pindahkan dulu head nya di master / di main
-> direct path = jalur branch nya nyambung langsung dengan jalur utama yaitu branch master / main
-> remote = untuk mengcopy commit yang ada di github ke local
-> commit = menyimpan data ke repository

3 area pada repo git
1. working tree = nama reponya
2. staging area = isi didalem reponya
3. History

==== GIT COMMAND LOCAL ====
$ git init = untuk membuat folder menjadi repository (main / master) -> pastikan sudah masuk ke direktory yang akan diubah menjadi repository
$ git status = untuk mengetahui perubahan apa yang terjadi pada repository, kalau misalkan ada yang merah berarti belum di git add, kalau ada yang warna ijo berarti belum di git commit
$ git rm --cached <nama file nya> = untuk mengeluarkan file dari staging area
$ git help
$ pwd = (print woring directory) untuk mengetahui kita bekerja di folder apa
$ ls = untuk mengetahui file apa saja yang ada di direktori
$ clear = untuk membersihkan layar

----- GIT COMMIT -----
$ git commit -m 'message' -- <my-dir> = digunakan untuk commit berdasarkan folder
$ git commit -m "text nya disini" = untuk menambahkan file apa yang di commit
$ git commit -am "mengubah file" = untuk meng add dan commit secara langsung, tanpa perintah git add terlebih dahulu -> kasusnya file yang termodified

----- GIT ADD -----
$ git add <file(s)> = untuk menambahkan ke staging area
$ git add . = untuk menambahkan perubahan seluruhnya ke staging area
$ git add ./folder_name = untuk menambahkan 1 folder ke staging area

----- GIT CONFIG -----
$ git config --list = digunakan untuk melihat username yang aktif
$ git config --global user.name "usernamenya apa" = digunakan untuk mengganti username di folder global
$ git config --global user.name "emailnya apa" = digunakan untu mengganti emailnya di folder global
$ git config --local user.name "usernamenya apa" = digunakan untuk mengganti username yang local
$ git config --local user.name "emailnya apa" = digunakan untu mengganti emailnya yang local

----- GIT CHECKOUT -----
$ git checkout <nama branch> = digunakan untuk pindah kelain branch
$ git checkout (kode 5 digit pertama) -- <nama file yang akan dikembalikan> = digunakan untuk kembali ke commit sebelumnya, atau keadaan sebelumnya, misalnya file yang udah dihapus mau dikembaliin, itu dengan git checkout
contoh : $ git checkout 130f7 -- css-file.css

----- GIT BRANCH -----
$ git branch = untuk menampilkan branch apa aja yang sudah ada, tanda bintang * merupakan branc yang aktif
$ git branch <nama branch> = digunakan untuk  menambahkan branch
$ git branch -d <nama branch> = digunakan untuk menghapus branch, tapi kalau belum di merge dia ngasih tau bahwa branch nya belum di merge
$ git branch -D <nama branch> = digunakan untuk menghapus branch, tapi kalau belum di merge dia ga peduli branch nya udah di merge atau belum, jadi langsung diapus
$ git branch --merged = untuk mengetahui branch manasaja yang sudah di merge

----- GIT MERGE ----
$ git merge <nama branch> = digunakan untuk menggabungkan branch, jangan lupa dipastikan head nya berada di master atau di main (metode Fast Forward)
$ git merge <nama branch> "nama commitnya apa" = digunakan untuk menggabungkan branch, jangan lupa dipastikan head nya berada di master atau di main (metode Three-way Merge / Merge Commit)

-----GIT LOG-----
$ git log = untuk mengetahui commit commit apa saja yang sudah di lakukan secara keseluruhan
$ git log -3 = untuk mengetahui commit apa saja yang sudah dilakukan tetapi hanya 3 baris terakhir
$ git log -- <nama file> = untuk mengetahui git commit secara spesifik berdasarkan file 
$ git log --all --decorate --oneline --graph = digunakan untuk melacak branch dengan format visualisasi
$ git log --all --decorate --graph = digunakan untuk melacak commit dan head

----- GIT ALIAS -----
$ alias graph="git log --all --decorate --oneline --graph" = untuk membuat alias graph jadi ngetik sintaknya ga panjang, berlaku hanya untuk 1 kali sesi, klo git nya di close, ya harus baut lagi aliasnya, inget jangan pake spasi sebelum dan setelah tanda =

----- GIT REMOTE -----
$ git remote = untuk melihat nama default remote, biasanya origin
$ git remote -v = digunakan untuk melihat remote secara detail / alamatnya
$ git remote add origin httpsxxxxxx = untuk menambahkan remote dari local ke github


----- GIT PUSTH -----
$ git push = digunakan untuk mengupload file yang dari local ke remote / online 
$ git push -u origin master = digunakan untuk mengupload file dengan fungsi upstream yaitu kedepanya tinggal git push aja 
$ git push origin <branch-name> = untuk mengupload di beda branch
$ git push <remotename> <commit SHA>:<remotebranchname> = digunakan untuk push ke remote berdasarkan commit, artinya hanya commit yg dipilih yg di push ke github

----- GIT FETCH -----
$ git fetch = digunakan untuk mengecek repo yang ada di remote udah sampe mana coomitnya, beda gak dengan yang kita punya

----- GIT PULL -----
$ git pull = digunakan untuk menarik codingan atau file yang ada di github ke local kita

----- GIT RESET -----
$ git reset --hard HEAD~1 = digunakan untuk kembali ke commit sebelumnya, atau menghapus commit yang barusan di buat, dan kembali ke commit sebelumnya
$ git reset --hard HEAD~3 = (remove last 3 commits from master)

----- GIT DIFF -----
$ git diff = digunakan untuk melihat perubahan file yang terjadi
$ git diff --name-only --cached = digunakan untuk menampilkan folder yang sudah masuk ke staging area

